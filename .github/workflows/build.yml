name: Build

on:
  push:
  pull_request:
  release:
    types:
      - created

jobs:

  build_mingw_toolchain:
    name: MinGW-W64 Toolchain (x64)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Environment Setup
      run: |
        sudo apt-get install bison bzip2 flex g++ gzip pax build-essential gcc 
    - name: Compile Toolchain
      run: |
        chmod 755 *
        BUILD_VERSION="$(./mingw-w64-build --version | cut -d ' ' -f 2)"
        ./mingw-w64-build --disable-gdb x86_64 ~/toolchains
        ./mingw-w64-build x86_64.clean
        ./mingw-w64-build pkgclean
        cd /home/runner/toolchains/
        rm -rf build-mingw-w64-x86_64.noindex
        rm -rf source.noindex
        rm -rf pkg
        tar cvzf mingw-w64-build-$BUILD_VERSION-x86_64-linux.tar.gz ~/toolchains/  
    - name: Upload Release Asset
      if: github.event_name == 'release'
      uses: AButler/upload-release-assets@v2.0
      with:
          files: '*.tar.gz'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          
  build_mingw_toolchain_i686:
    name: MinGW-W64 Toolchain (i686)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Environment Setup
      run: |
        sudo apt-get install bison bzip2 flex g++ gzip pax build-essential gcc 
    - name: Compile Toolchain
      run: |
        chmod 755 *
        BUILD_VERSION="$(./mingw-w64-build --version | cut -d ' ' -f 2)"
        ./mingw-w64-build --disable-gdb i686 ~/toolchains
        ./mingw-w64-build i686.clean
        ./mingw-w64-build pkgclean
        cd /home/runner/toolchains/
        rm -rf build-mingw-w64-x86_64.noindex
        rm -rf source.noindex
        rm -rf pkg
        tar cvzf mingw-w64-build-$BUILD_VERSION-i686-linux.tar.gz ~/toolchains/  
    - name: Upload Release Asset
      if: github.event_name == 'release'
      uses: AButler/upload-release-assets@v2.0
      with:
          files: '*.tar.gz'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      
  build_mingw_toolchain_macOS:
    name: macOS MinGW-W64 Toolchain
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Compile Toolchain
      run: |
        chmod 755 *
        BUILD_VERSION="$(./mingw-w64-build --version | cut -d ' ' -f 2)"
        ./mingw-w64-build --disable-gdb x86_64 ~/toolchains
        ./mingw-w64-build x86_64.clean
        ./mingw-w64-build pkgclean
        cd /Users/runner/toolchains/
        rm -rf build-mingw-w64-x86_64.noindex
        rm -rf source.noindex
        rm -rf pkg
        tar cvzf mingw-w64-build-$BUILD_VERSION-x86_64-macos.tar.gz ~/toolchains/  
    - name: Upload Release Asset
      if: github.event_name == 'release'
      uses: AButler/upload-release-assets@v2.0
      with:
          files: '*.tar.gz'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          
  build_mingw_toolchain_macOS_i686:
    name: macOS MinGW-W64 Toolchain (i686)
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Compile Toolchain
      run: |
        chmod 755 *
        BUILD_VERSION="$(./mingw-w64-build --version | cut -d ' ' -f 2)"
        ./mingw-w64-build --disable-gdb i686 ~/toolchains
        ./mingw-w64-build i686.clean
        ./mingw-w64-build pkgclean
        cd /Users/runner/toolchains/
        rm -rf build-mingw-w64-x86_64.noindex
        rm -rf source.noindex
        rm -rf pkg
        tar cvzf mingw-w64-build-$BUILD_VERSION-i686-macos.tar.gz ~/toolchains/  
    - name: Upload Release Asset
      if: github.event_name == 'release'
      uses: AButler/upload-release-assets@v2.0
      with:
          files: '*.tar.gz'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
